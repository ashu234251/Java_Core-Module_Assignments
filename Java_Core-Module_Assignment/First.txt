Q1.What is the difference between Compiler and Interpreter
 In case of compiler, if any error in any line, then it is not compiled, because the whole code is compiled at once .
 Examples-- C,C++
 In Case of Interpreter,if any error in the last line then all except last line will be processed, because Interpreter executes line by line.
 Example--  Python, JavaScript

 **Java is both Interpreted and Compiled programming language, as the code is first compiled using Java Compiler and genrates bytecode. And then 
   the bytecode is processed using JVM(Interpreter)

Q2.What is the difference between JDK, JRE, and JVM?
   JDK= Java Compiler + JRE(JVM,Library tools,..)

Q3.How many types of memory areas are allocated by JVM?
  1. Class(Method) Area
  2. Heap
  3. Stack
  4. Program Counter Register
  5. Native Method Stack 

Q4.What is JIT compiler?
  JIT in Java is an integral part of the JVM. It accelerates execution performance many times over the previous level. In other words, it is a long-running, computer-intensive program that  provides the best performance environment. It optimizes the performance of the Java application at compile or run time.

Q5.What are the various access specifiers in Java?
  There are usually four types of access specifiers:-
   1.private
   2.default
   3.protected
   4.public

Q6.What is a compiler in Java?
  Compiler converts the high level Java program to bytecodes, which are of WORA nature.

Q7.Explain the types of variables in Java?
   There are three types of variables in Java:
   1. local variable-- Declared inside the body of an method
   2. instance variable-- Declared outside the method but in a class
   3. static variable--Declared with keyword static, memory allocation for static variables happens only once when the class is loaded in the memory.

Q8.What are the Datatypes in Java?
   Data types are divided into two groups:
   1. Primitive data types - includes byte, short, int, long, float, double, boolean and char
   2. Non-primitive data types - such as String, Arrays and Classes.

Q9.What are the identifiers in java?
   It is a name in java program, it can be a classname, methodname, variable-name,label-name. We can't use reserve words as identifiers.

Q10.Explain the architecture of JVM 
    When we compile a .java file, .class files(contains byte-code) with the same class names present in .java file are generated by the Java compiler.
    This .class file goes into various steps when we run it. These steps together describe the whole JVM. 
    1.Class Loader Subsystem
        It is mainly responsible for three activities. 
          1.Loading
          2.Linking
          3.Initialization
    2. Linking: Performs verification, preparation, and (optionally) resolution. 
    3. JVM Memory 
       Method area: In the method area, all class level information like class name, immediate parent class name, methods and variables information etc. are stored,
                    including static variables. There is only one method area per JVM, and it is a shared resource. From java 8, static variables are now stored in Heap area.
       Heap area: Information of all objects is stored in the heap area. There is also one Heap Area per JVM. It is also a shared resource.
       Stack area: For every thread, JVM creates one run-time stack which is stored here. Every block of this stack is called activation record/stack 
                   frame which stores methods calls. All local variables of that method are stored in their corresponding frame. After a thread terminates,
                   its run-time stack will be destroyed by JVM. It is not a shared resource.
       PC Registers: Store address of current execution instruction of a thread. Obviously, each thread has separate PC Registers.
       Native method stacks: For every thread, a separate native stack is created. It stores native method information. 
